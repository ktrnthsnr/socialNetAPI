const { Schema, model } = require('mongoose');
const moment = require('moment');   // will format createdAd date to look better
const Thought = require('./Thought');

//schema
const UserSchema = new Schema(
  {
    // note: MongoDB ObjectID or _id will be autogenerated, no need to add to model
    userName: {
      type: String,
      unique: true,
      required: true,
      trim: true
    },
    email: {
        type: String,
        unique: true,
        required: true,
        trim: true
      },
      
    // thoughtArray: [],    //array TODO: how to reference Thoughts.js model?
    // // parent (User model) associates to child documents (Thought model)
    thoughts: [   
      {
        type: Schema.Types.ObjectId,  //associate User and thoughts models through ObjectID
        ref: 'Thought'
      }
    ],
    friends: [   
        {
          type: Schema.Types.ObjectId,  //associate User and friend (in same model) through ObjectID
          ref: 'User'
        }
      ]
  },

    // Virtual added, which is separated from grouping
      // this Virtual is for count of friends
      {
        toJSON: {
          virtuals: true,  // (2) virtual set to true
          getters: true   // work with moment.js, date formatter Getter as per above
        },
        id: false
      }   
  );

// --  To add virtuals, (1) this definition (2) update schema above with toJSON property
      //get total count of friends on retrieval
  FriendSchema.virtual('friendCount').get(function() {
        return this.friends.length;    
    // return this.friends.reduce((total, friend) => total + friend.length + 1, 0);
  });
    

 // create the Friend model using the UserSchema
 const Friend = model('User', FriendSchema);

  // export the User model
module.exports = User;